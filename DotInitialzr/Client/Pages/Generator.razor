@page "/"
@inject HttpClient Http
@inject IJSRuntime JSRuntime;

<VMContext VM="Generator" TState="IGeneratorState" OnStateChange="UpdateState">
@if (state != null)
{
    <d-form>
        <d-frame>
            <d-dropdown-list id="Template" />
            <d-text-field id="ProjectName" />
            <d-button id="Generate" submit="true" />
        </d-frame>
    </d-form>
}
</VMContext>

@code {
   private IGeneratorState state;

   private void UpdateState(IGeneratorState state)
   {
       this.state = state;
       if (state.ProjectMetadata != null)
       {
           _ = GenerateAsync(state.ProjectMetadata);
           this.state.ProjectMetadata = null;
       }

       StateHasChanged();
   }

   private async Task GenerateAsync(ProjectMetadata metadata)
   {
       var response = await Http.PostAsJsonAsync("api/generator", state.ProjectMetadata);
       await JSRuntime.InvokeAsync<string>("saveFile", new object[] 
       { 
           Convert.ToBase64String(await response.Content.ReadAsByteArrayAsync()), 
           response.Content.Headers.ContentDisposition.FileName,
           response.Content.Headers.ContentType.ToString()
       });
   }
}
